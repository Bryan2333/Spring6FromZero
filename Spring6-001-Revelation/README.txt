1. 开闭原则(OCP)

    1. 什么是OCP

        1. OCP是七大软件开发原则中最基本的一个，开闭原则

        2. 对拓展开放，对修改封闭

        3. 如果在对系统功能进行拓展时，没有修改以前写好的代码，那就是符合开闭原则
           反之，如果在对系统功能进行拓展时，修改了以前写好的代码，那这个设计是失败的，违反了开闭原则

2. 依赖倒置原则(DIP)

    1. 什么是依赖倒置原则

        1. 面向接口编程、面向抽象编程，而不是面向具体编程

    2. 依赖倒置原则的目的

        1. 降低程序的耦合度，提高拓展力

    3. 符合依赖倒置原则

        1. 上层不再依赖下曾，就符合依赖倒置原则

    4. 违背依赖倒置原则

        1. 上层依赖下层，下层一动，上层就受牵连

4. 控制反转 IoC (Inversion of Control)

    1. 什么是控制反转

        1. 不在代码中使用硬编码的方式来new对象 (new对象的权力交出去)

        2. 不在代码中使用硬编码的方式来维护对象之间的关系 (维护对象之间的关系交出去)

        3. 控制反转是一种编程思想，一种新型的设计模式

5. Spring框架

    1. Spring框架实现了IoC这种思想

    2. Spring框架可以new对象

    3. Spring框架可以维护对象之间的关系

    4. 实现控制反转思想的方式有多种，其中重要的一种是 依赖注入 (Dependency Injection) 简称 DI

    5. 依赖注入又有两种常见的方式

        1. set注入 (执行set方法给属性赋值)

        2. 构造方法注入 (通过构造器给属性赋值)

    6. 依赖：两个对象之间的关系，注入：通过这种方式，可以使这两个对象产生关系

