<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- singleton + setter模式下的循环依赖 Spring下没有任何问题 -->
    <!-- singleton表示在Spring容器中是单例的 -->
    <!--
        Spring对Bean的管理分为两个阶段

        1. 在Spring上下文加载时，实例化Bean，只要其中任何一个Bean实例化后，立即进行"曝光" (不等属性赋值)
        2. Bean"曝光"之后，在对其进行属性的赋值(set注入)

        核心解决方案：对象的实例化和对象的属性赋值分开完成
    -->
<!--    <bean id="husbandBean" class="com.bryan9.spring6.bean.Husband">-->
<!--        <property name="name" value="张三"/>-->
<!--        <property name="wife" ref="wifeBean"/>-->
<!--    </bean>-->

<!--    <bean id="wifeBean" class="com.bryan9.spring6.bean.Wife">-->
<!--        <property name="name" value="小花"/>-->
<!--        <property name="husband" ref="husbandBean"/>-->
<!--    </bean>-->

    <!-- prototype + setter模式 -->
    <bean id="husbandBean" class="com.bryan9.spring6.bean.Husband">
        <property name="name" value="张三"/>
        <property name="wife" ref="wifeBean"/>
    </bean>

    <bean id="wifeBean" class="com.bryan9.spring6.bean.Wife" scope="prototype">
        <property name="name" value="小花"/>
        <property name="husband" ref="husbandBean"/>
    </bean>
</beans>